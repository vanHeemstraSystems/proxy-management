version: "3.7"

secrets:
  database_password:
    file: ./secrets/.database_password
  proxy_password:
    file: ./secrets/.proxy_password  

# See https://stackoverflow.com/questions/29261811/use-docker-compose-env-variable-in-dockerbuild-file
services:

  main:
    secrets:
      - proxy_password
    build:
      context: ./main
      dockerfile: Dockerfile.prod
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}
        DISABLE_IPV6: ${DISABLE_IPV6}
        NODE_ENV: production
    env_file:
      - .env
    container_name: ${UNIQUE_NAMESPACE}-main-prod
    security_opt:
      - no-new-privileges:true
    privileged: true      
    ports:
      - "3020:3020"
    volumes:
      - ./main:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPULLING=true
    #  - PROXY_PASSWORD='/run/secrets/proxy_password'
#    depends_on:
#      - "portainer"
#      - "scope"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}    
    env_file:
      - .env
    container_name: ${UNIQUE_NAMESPACE}-nginx-prod
    extra_hosts:
      - "host.docker.internal:host-gateway"    
    security_opt:
      - no-new-privileges:true
    privileged: true
    ports:
      - "70:80"
    depends_on:
      - "main"
      
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile.prod
      args: # from env_file
        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
        PROXY_USER: ${PROXY_USER}
        PROXY_PASSWORD: ${PROXY_PASSWORD}
        PROXY_FQDN: ${PROXY_FQDN}
        PROXY_PORT: ${PROXY_PORT}    
    env_file:
      - .env     
    container_name: ${UNIQUE_NAMESPACE}-proxy-prod
    security_opt:
      - no-new-privileges:true
    privileged: true
    restart: unless-stopped
    ports:
      - "80:80" # Public HTTP Port
      - "81:81" # Admin Web Port
      - "443:443" # Public HTTPS Port
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

networks:
  proxy:
    external: true

#  portainer:
#    secrets:
#      - proxy_password
#    build:
#      context: ./portainer
#      dockerfile: Dockerfile.prod
#      args: # from env_file
#        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
#        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
#        PROXY_USER: ${PROXY_USER}
#        PROXY_PASSWORD: ${PROXY_PASSWORD}
#        PROXY_FQDN: ${PROXY_FQDN}
#        PROXY_PORT: ${PROXY_PORT}
#        NODE_ENV: production
#    env_file:
#      - .env
#    container_name: ${UNIQUE_NAMESPACE}-portainer-prod
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
#    privileged: true
#    networks:
#      - proxy
#    ports:
#      - "9443:9443"
#      - "9000:9000"
#      - "8000:8000"      
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - ./data:/data
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.portainer.entrypoints=http"
#      - "traefik.http.routers.portainer.rule=Host(`portainer.apps-portainer.mycompany.com`)"
#      - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
#      - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
#      - "traefik.http.routers.portainer-secure.entrypoints=https"
#      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.apps-portainer.mycompany.com`)"
#      - "traefik.http.routers.portainer-secure.tls=true"
#      - "traefik.http.routers.portainer-secure.tls.certresolver=http"
#      - "traefik.http.routers.portainer-secure.service=portainer"
#      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
#      - "traefik.docker.network=proxy"

#  scope:
#    secrets:
#      - proxy_password
#    build:
#      context: ./scope
#      dockerfile: Dockerfile.prod
#      args: # from env_file
#        UNIQUE_NAMESPACE: ${UNIQUE_NAMESPACE}
#        IMAGE_REPOSITORY: ${IMAGE_REPOSITORY}
#        PROXY_USER: ${PROXY_USER}
#        PROXY_PASSWORD: ${PROXY_PASSWORD}
#        PROXY_FQDN: ${PROXY_FQDN}
#        PROXY_PORT: ${PROXY_PORT}
#    env_file:
#      - .env
#    container_name: ${UNIQUE_NAMESPACE}-scope-prod
#    security_opt:
#      - no-new-privileges:true
#    privileged: true
#    # network_mode: "host"
#    # pid: "host"
#    labels:
#      - "works.weave.role=system"     
#    restart: unless-stopped
#    ports:
#      - "4040:4040" 
#    volumes:
#    #  - ./scope:/home/app
#      - "/var/run/docker.sock:/var/run/docker.sock:rw"
#    #  - /scope/node_modules
#    # environment:
#    #  - PROXY_PASSWORD='/run/secrets/proxy_password' 
#    command:
#      - "--probe.docker=true"
#      - "--weave=false"
